<?php
/**
 * Assets class
 *
 * @author {{author_name}}
 * @package {{slug}}
 */

namespace {{namespace}};

use DateTime;

/**
 * Class Assets
 *
 * @package {{slug}}
 */
class Assets {

	/**
	 * Init constructor.
	 */
	public function __construct() {
		if ( ! class_exists( '\Gutenverse\Pro\License' ) ) {
			add_action( 'gutenverse_include_frontend', array( $this, 'frontend_scripts' ), 11 );
		}
		add_action( 'gutenverse_include_block', array( $this, 'editor_scripts' ), 1 );
		add_filter( 'gutenverse_block_config', array( $this, 'block_config' ) );
		add_filter( 'gutenverse_dashboard_config', array( $this, 'block_config' ) );
	}

	/**
	 * Enqueue script frontend.
	 */
	public function frontend_scripts() {
		wp_enqueue_script(
			'{{slug}}-frontend-event',
			{{constant}}_URL . '/assets/js/profrontend.js',
			array(),
			{{constant}}_VERSION,
			true
		);

		$frontend_include = ( include {{constant}}_DIR . '/assets/dependencies/frontend.asset.php' )['dependencies'];

		wp_enqueue_script(
			'{{slug}}-frontend',
			{{constant}}_URL . '/assets/js/frontend.js',
			$frontend_include,
			{{constant}}_VERSION,
			true
		);

		// Register & Enqueue Style.
		wp_enqueue_style(
			'{{slug}}-frontend-block',
			{{constant}}_URL . '/assets/css/frontend.css',
			array( 'gutenverse-frontend-style' ),
			{{constant}}_VERSION
		);
	}

	/**
	 * Enqueue Editor Scripts.
	 */
	public function editor_scripts() {
		$include = array_values(
			array_unique(
				array_merge(
					( include_once {{constant}}_DIR . '/assets/dependencies/editor.sticky.asset.php' )['dependencies'],
					( include_once {{constant}}_DIR . '/assets/dependencies/filter.asset.php' )['dependencies']
				)
			)
		);

		wp_enqueue_script(
			'{{slug}}-filter',
			{{constant}}_URL . '/assets/js/filter.js',
			$include,
			{{constant}}_VERSION,
			true
		);

		wp_enqueue_style(
			'{{slug}}-editor-block',
			{{constant}}_URL . '/assets/css/editor.css',
			array( 'gutenverse-editor-style' ),
			{{constant}}_VERSION
		);

		wp_enqueue_style(
			'{{slug}}-frontend-block',
			{{constant}}_URL . '/assets/css/frontend.css',
			array( 'gutenverse-frontend-style' ),
			{{constant}}_VERSION
		);

		wp_enqueue_script(
			'{{slug}}-blocks',
			{{constant}}_URL . '/assets/js/blocks.js',
			$include,
			{{constant}}_VERSION,
			true
		);

		// Register & Enqueue Style.
		wp_enqueue_style( '{{slug}}-block' );

		if ( ! gutenverse_check_if_script_localized( 'GutenverseProJSURL' ) ) {
			wp_localize_script( '{{slug}}-filter', 'GutenverseProJSURL', $this->js_pro_config() );
			wp_set_script_translations( 'gutenverse-pro', 'gutenverse-pro', {{constant}}_LANG_DIR );

			wp_localize_script(
				'{{slug}}-block',
				'GutenverseProData',
				array(
					'roles'      => $this->get_all_roles(),
					'posttype'   => $this->get_all_post_type(),
					'taxonomies' => $this->get_all_taxonomies(),
				)
			);
		}
	}

	/**
	 * Get All Taxonomies
	 *
	 * @return array
	 */
	public function get_all_taxonomies() {
		$result     = array();
		$taxonomies = get_taxonomies(
			array(
				'public' => true,
			),
			'object'
		);

		foreach ( $taxonomies as $key => $taxonomy ) {
			$result[] = array(
				'value' => $key,
				'label' => $taxonomy->label,
			);
		}

		return $result;
	}

	/**
	 * Get All Post Type
	 *
	 * @return array
	 */
	public function get_all_post_type() {
		$types = get_post_types(
			array(
				'public' => true,
			),
			'objects'
		);

		unset( $types['gutenverse-form'] );
		unset( $types['gutenverse-entries'] );
		unset( $types['attachment'] );

		$the_types = array();

		foreach ( $types as $key => $type ) {
			$the_types[] = array(
				'value' => $key,
				'label' => $type->label,
			);
		}

		return $the_types;
	}

	/**
	 * Get All Roles.
	 *
	 * @return array
	 */
	public function get_all_roles() {
		$roles = array();

		foreach ( get_editable_roles() as $key => $role ) {
			$roles[] = array(
				'value' => $key,
				'label' => $role['name'],
			);
		}

		return $roles;
	}

	/**
	 * JS Pro Config.
	 */
	public function js_pro_config() {
		return array(
			'editorSticky' => {{constant}}_URL . '/assets/js/editor.sticky.js',
			'imgDir'       => {{constant}}_URL . '/assets/img',
			'wpJsonConfig' => array(
				'wpjson_url'      => get_rest_url(),
				'wpjson_nonce'    => wp_create_nonce( 'wp_rest' ),
				'wpjson_endpoint' => admin_url( 'admin-ajax.php?action=rest-nonce' ),
			),
		);
	}
	/**
	 * JS Config.
	 *
	 * @param array $config .
	 */
	public function block_config( $config ) {
		$config['license']   = $this->get_license();
		$config['domainURL'] = get_site_url(); // Todo: check if we are using WordPress address.
		$config['current']   = ( new DateTime() )->getTimestamp();
		$config['lottieDir'] = {{constant}}_URL . '/assets/lottie';

		return $config;
	}

	/**
	 * Get dashboard data.
	 *
	 * @return array|boolean
	 */
	private function get_license() {
		return get_option( 'gutenverse-license', '' );
	}
}
